on:
  workflow_call:
    inputs:
        GitVersion_SemVer:
            description: 'The semantic version of the project'
            required: true
            type: string    
        Config:
            description: 'The configuration for the workflow'
            required: true
            type: string
jobs:
  build-images:
    name: Build and Push Images
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:  ${{ fromJson(inputs.Config).platforms }}
        image: ${{ fromJson(inputs.Config).images }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build Args JSON to List Output
      id: parse_build_args
      run: |
        echo "image_name=ghcr.io/${GITHUB_REPOSITORY}/${{ matrix.image }}" >> $GITHUB_OUTPUT
        echo "image_name=${image_name}"
   
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      id: build
      uses: docker/build-push-action@v6
      with:
        context: ./
        build-args: |
          KADENSE_VERSION=${{ inputs.GitVersion_SemVer }}
          KADENSE_VERSION_SUFFIX=""
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/${{ matrix.platform }}
        outputs: type=image,name=${{ steps.parse_build_args.outputs.image_name }},push-by-digest=true,name-canonical=true,push=true
        target: ${{ matrix.image }}
      
    - name: Build digest url
      id: concatenate
      run: |
      
        digest_url="linux/${{ matrix.image }}-${{ matrix.platform }}"
        echo "digest_url=$digest_url" >> $GITHUB_OUTPUT
      
    - name: Export digest
      run: |
        mkdir -p /tmp/digests/${{ steps.concatenate.outputs.digest_url }}
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${{ steps.concatenate.outputs.digest_url  }}/${digest#sha256:}" 
      
    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ matrix.image }}-linux-${{ matrix.platform }}
        path: /tmp/digests/${{ steps.concatenate.outputs.digest_url }}/*
        if-no-files-found: error
        retention-days: 1

      
    - name: Fetch Docker Artifacts
      run: |
        if [ "${{ matrix.image }}" == "artifact" ]; then
          mkdir -p /tmp/docker-artifacts
          cd /tmp/docker-artifacts
          docker save ${{ steps.parse_build_args.outputs.image_name }} -o artifact.tar
          tar -xvf artifact.tar
          rm artifact.tar
          export BLOB_FILE=$(cat manifest.json | jq '.[0].Layers[0]' -r)
          tar -xvf $BLOB_FILE
        fi;

    - name: Upload Docker Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docker-artifacts-${{ matrix.image }}-linux-${{ matrix.platform }}
        path: /tmp/docker-artifacts/outputs/**
        if-no-files-found: error
        retention-days: 1


  merge-images:
    needs: 
    - build-images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(inputs.Config).images }}
    steps:

    - name: Build Args JSON to List Output
      id: parse_build_args
      run: |
        echo "image_name=ghcr.io/${GITHUB_REPOSITORY}/${{ matrix.image }}" >> $GITHUB_OUTPUT
        PUSH_IMAGE="true" 
        if [ "${{ matrix.image }}" == "artifact" ]; then
          PUSH_IMAGE="false";
        fi;
        echo "PUSH_IMAGE=${PUSH_IMAGE}" >> $GITHUB_OUTPUT
        echo "image_name=${image_name}"
        echo "PUSH_IMAGE=${PUSH_IMAGE}"
   
    - if: ${{ steps.parse_build_args.outputs.PUSH_IMAGE }}
      name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: /tmp/digests
        pattern: digests-${{ matrix.image }}-*-*
        merge-multiple: true

    - if: ${{ steps.parse_build_args.outputs.PUSH_IMAGE }}
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - if: ${{ steps.parse_build_args.outputs.PUSH_IMAGE }}
      name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
  
    - if: ${{ steps.parse_build_args.outputs.PUSH_IMAGE }}
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/$GITHUB_REPOSITORY/${{ matrix.image }}
        tags: ${{ inputs.GitVersion_SemVer }}
        labels: |
          org.opencontainers.image.title=${{ matrix.image }}
          org.opencontainers.image.description=${{ matrix.image }} container image
          org.opencontainers.image.vendor=Head in the Cloud Solutions Ltd
        
    - if: ${{ steps.parse_build_args.outputs.PUSH_IMAGE }}
      name: Create manifest list and push
      working-directory: /tmp/digests
      run: |
        TAGNAME="ghcr.io/$GITHUB_REPOSITORY/${{ matrix.image }}:${{ inputs.GitVersion_SemVer }}"
        DATA=$(printf "ghcr.io/$GITHUB_REPOSITORY/${{ matrix.image }}@sha256:%s\n" *)
        echo $DATA
        docker buildx imagetools create -t "${TAGNAME}" $(echo $DATA | xargs)
